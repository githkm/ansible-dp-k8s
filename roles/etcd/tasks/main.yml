- name: "关闭防火墙"
  systemd:
    name: firewalld
    enabled: no
    state: stopped
- name: "永久关闭SELINUX"
  selinux: state=disabled
- name: "临时关闭SELINUX"
  shell: "setenforce 0"
  ignore_errors: yes
- name: "添加阿里云软件源"
  yum_repository:
    file: CentOS-Base
    name: '{{ item.name }}'
    description: '{{ item.description}}'
    baseurl: '{{ item.baseurl }}'
    gpgkey: "{{ gpgkey }}/centos/RPM-GPG-KEY-CentOS-7"
    failovermethod: priority
    gpgcheck: yes
    enabled: yes
  with_items:
    - { name: "base",description: "CentOS-$releasever",baseurl: "http://mirrors.cloud.aliyuncs.com/centos/$releasever/os/$basearch/ \n https://mirrors.aliyun.com/centos/$releasever/os/$basearch/" }
    - { name: "updates",description: "CentOS-$releasever",baseurl: "http://mirrors.cloud.aliyuncs.com/centos/$releasever/updates/$basearch/ \n https://mirrors.aliyun.com/centos/$releasever/updates/$basearch/" }
    - { name: "extras",description: "CentOS-$releasever",baseurl: "http://mirrors.cloud.aliyuncs.com/centos/$releasever/extras/$basearch/ \n https://mirrors.aliyun.com/centos/$releasever/extras/$basearch/" }
  tags: CentOS-Base
- name: "添加EPEL软件源"
  yum_repository:
    file: epel
    name: epel
    description: Extra Packages for Enterprise Linux 7 - $basearch
    baseurl: "http://mirrors.cloud.aliyuncs.com/epel/7/$basearch \n https://mirrors.aliyun.com/epel/7/$basearch"
    gpgkey: "file:///etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL-7"
    failovermethod: priority
    gpgcheck: no
    enabled: yes
  tags: epel
- name: "安装必要组件"
  yum:
    update_cache: yes
    name: ['chrony', 'lrzsz']
    state: installed
- name: "重启chrony服务"
  systemd:
    name: chronyd
    enabled: yes
    state: restarted
- name: '清理etcd数据目录'
  file:
    path: '{{ etcd_data_dir }}'
    state: absent
- name: "创建etcd组"
  group:
    name: etcd
    state: present
- name: "创建etcd用户"
  user:
    name: etcd
    groups: etcd
    home: '{{ etcd_data_dir }}'
    shell: '/sbin/nologin'
    createhome: yes
    state: present
- name: "创建文件夹"
  file:
    path: '{{ item }}'
    owner: etcd
    group: etcd
    state: directory
  with_items:
    - '{{ etcd_dir }}'
    - '{{ etcd_data_dir }}'
    - '{{ etcd_data_dir }}/cert'
- name: "分发证书"
  copy:
    src: "{{ ssl_dir }}/"
    dest: "{{ etcd_data_dir }}/cert/"
    owner: etcd
    group: etcd
- name: "下载ETCD部署文件"
  get_url:
    url: '{{ etcd_url }}'
    dest: /opt
- name: "解压安装包"
  unarchive:
    src: '/opt/etcd-{{ etcd_version }}.tar.gz'
    dest: '/opt'
- name: '再解压'
  shell: 'tar -xvf $(ls /opt/pkg/etcd/{{ etcd_version }}/rpm/etcd-*.tar.gz) --strip-components=1 -C {{ etcd_dir }}'
- name: '修改权限'
  shell: 'chmod a+x {{ etcd_dir }}/{etcd,etcdctl}'
- name: '创建软链接'
  file: 
    src: '{{ item.src }}'
    dest: '{{ item.dest }}'
    state: link
  with_items:
    - { src: "{{ etcd_dir }}/etcd", dest: "/usr/bin/etcd"}
    - { src: "{{ etcd_dir }}/etcdctl", dest: "/usr/bin/etcdctl"}
- name: "创建etcd service"
  template:
    src: etcd.service.j2
    dest: /lib/systemd/system/etcd.service
- name: "启动etcd"
  systemd:
    daemon_reload: yes
    name: etcd
    enabled: yes
    state: started
- name: "等待etcd启动完成"
  wait_for:
    port: "2379"
    host: "{{ ansible_default_ipv4.address }}"
    delay: 10
- name: "检查状态3.3.8"
  shell: etcdctl member list --endpoints=https://{{ ansible_default_ipv4.address }}:2379 -ca-file=/var/lib/etcd/cert/ca.pem --cert-file=/var/lib/etcd/cert/etcd-client.pem --key-file=/var/lib/etcd/cert/etcd-client-key.pem 
  register: etcd_check
  when: etcd_version == 'v3.3.8'
- name: "检查状态3.4.3"
  shell: etcdctl member list --endpoints=https://{{ ansible_default_ipv4.address }}:2379 --cacert=/var/lib/etcd/cert/ca.pem --cert=/var/lib/etcd/cert/etcd-client.pem --key=/var/lib/etcd/cert/etcd-client-key.pem
  register: etcd_check
  when: etcd_version == 'v3.4.3' 
- debug: var=etcd_check.stdout
