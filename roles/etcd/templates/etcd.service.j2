[Unit]
Description=etcd service
After=network.target

[Service]
{% if etcd_version == 'v3.4.3' %}
Environment="ETCD_QUOTA_BACKEND_BYTES=100000000000"
Environment="ETCD_EXPERIMENTAL_BACKEND_BBOLT_FREELIST_TYPE=map"
{% endif %}
#Type=notify
WorkingDirectory={{ etcd_data_dir }}
User=etcd
ExecStart=/usr/bin/etcd --election-timeout=3000 \
	--heartbeat-interval=500 \
	--snapshot-count=50000 \
	--data-dir=data.etcd --name {{ NODE_NAME }} \
	--client-cert-auth --trusted-ca-file={{ etcd_data_dir }}/cert/ca.pem \
	--cert-file={{ etcd_data_dir }}/cert/etcd-server.pem --key-file={{ etcd_data_dir }}/cert/etcd-server-key.pem \
	--peer-client-cert-auth --peer-trusted-ca-file={{ etcd_data_dir }}/cert/peer-ca.pem \
	--peer-cert-file={{ etcd_data_dir }}/cert/{{ NODE_NAME }}.pem --peer-key-file={{ etcd_data_dir }}/cert/{{ NODE_NAME }}-key.pem \
	--initial-advertise-peer-urls https://{{ ansible_default_ipv4.address }}:2380 --listen-peer-urls https://{{ ansible_default_ipv4.address }}:2380 \
	--advertise-client-urls https://{{ ansible_default_ipv4.address }}:2379 --listen-client-urls https://{{ ansible_default_ipv4.address }}:2379 \
	--initial-cluster {% set pk = groups['etcd'] %}{% for h in pk %}{{ hostvars[h]['NODE_NAME'] }}=https://{{ h }}:2380{% if not loop.last %},{% endif %}{% endfor %} \
	--initial-cluster-state new --initial-cluster-token {{ etcd_token }}
LimitNOFILE=65536
Restart=always
RestartSec=15s
OOMScoreAdjust=-999

[Install]
WantedBy=multi-user.target
