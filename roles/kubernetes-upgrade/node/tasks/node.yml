- name: "下载kubernetes安装包"
  get_url:
    url: '{{ kubernetes_url }}'
    dest: /opt

- name: "解压kubernetes安装包"
  unarchive:
    src: '/opt/kubernetes-{{ kubernetes_version }}.tar.gz'
    dest: '/opt'

- name: "配置br_netfilter模块"
  shell: >
    modprobe br_netfilter &&
    echo -e "br_netfilter\n" >> /etc/modules-load.d/k8s-basic-modules.conf

- name: "升级crictl"
  shell: >
    rm -rf /usr/bin/crictl &&
    cp -rf /opt/pkg/kubernetes/{{ kubernetes_version }}/rpm/crictl /usr/bin/crictl &&
    chmod a+x /usr/bin/crictl
- name: "升级kubernetes-cni kubelet-{{ kubernetes_version }}包"
  shell: 'yum localinstall -y $(ls /opt/pkg/kubernetes/{{ kubernetes_version }}/rpm/ | grep -E "kubernetes-cni|kubelet" | xargs -I "{}" echo -n "/opt/pkg/kubernetes/{{ kubernetes_version }}/rpm/{} ")'

- name: "清理软件安装kubelet服务"
  file:
    path: "{{ item }}"
    state: absent
  with_items:
    - "/usr/lib/systemd/system/kubelet.service"
    - "/usr/lib/systemd/system/kubelet.service.d"

- name: "配置系统管理员安装kubelet服务"
  template:
    src: kubelet.service.j2
    dest: /etc/systemd/system/kubelet.service
    mode: 0755

- name: "配置10-kubeadm.conf"
  template:
    src: 10-kubeadm.conf.j2
    dest: /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
    mode: 0755

- name: "设置kubelet服务配置内存大于3.5G"
  shell: >
    sed -i -e "s/--cgroup-driver=/--system-reserved=memory=300Mi --kube-reserved=memory=400Mi --eviction-hard=imagefs.available<15%,memory.available<300Mi,nodefs.available<10%,nodefs.inodesFree<5% --cgroup-driver=/g" /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
  when: ansible_memtotal_mb > 3584

- name: "设置allow-privileged配置"
  shell: >
    sed -i -e "s/--pod-manifest-path=/--allow-privileged=true --pod-manifest-path=/g" /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
  when: "'v1.15.0' is version('v{{ kubernetes_version }}', '>')"

- name: "重启kubelet服务"
  systemd:
    daemon_reload: yes
    name: kubelet
    enabled: yes
    state: restarted

- name: "取消封锁节点"
  command: "kubectl uncordon {{ ansible_default_ipv4.address }}"
  delegate_to: "{{ groups['kube-master'][0] }}"
