- name: reset | kubeadm reset
  command: kubeadm reset --force
  ignore_errors: true

- name: "stop kubelet  service"
  service:
    name: kubelet
    state: stopped
    enabled: no
  ignore_errors: true

- name: "delete all container"
  shell: >
    docker kill $(docker ps -a -q) &&
    docker rm $(docker ps -a -q)
  ignore_errors: true

- name: reset | stop and disable services
  service:
    name: "{{ item }}"
    state: stopped
    enabled: no
  with_items:
    - etcd
    - docker
  ignore_errors: true

- name: reset | remove services
  file:
    path: "/lib/systemd/system/{{ item }}.service"
    state: absent
  with_items:
    - etcd

# - name: reset | gather mounted kubelet dirs
#   shell: mount | grep /var/lib/kubelet | awk '{print $3}'
#   check_mode: no
#   register: mounted_dirs
#   tags:
#     - mounts

# - name: reset | unmount kubelet dirs
#   command: umount {{item}}
#   with_items: '{{ mounted_dirs.stdout_lines }}'
#   tags:
#     - mounts

- name: unmount kubelet filesystem
  mount: path=/var/run/kubelet state=unmounted

- name: reset | uninstall package
  yum:
    name: ['kubeadm', 'kubectl', 'kubelet', 'kubernetes-cni', 'docker-ce']
    state: absent

- name: reset | systemctl daemon-reload
  command: systemctl daemon-reload

- name: reset | systemctl reset-failed
  command: systemctl reset-failed

- name: flush iptables
  iptables:
    flush: yes
  ignore_errors: true

- name: cleanup networks
  shell: "ip link del flannel.1; ip link del cni0;"
  ignore_errors: true

- name: reset | delete some files and directories
  file:
    path: "{{ item }}"
    state: absent
  with_items:
    - /etc/kubernetes
    - /etc/systemd/system/kubelet.service.d
    - /etc/systemd/system/docker.service.d
    - /etc/docker
    - /var/lib/kubelet
    - /var/lib/docker
    - /root/.kube
    - /var/lib/etcd
    - /etc/ssl/etcd
    - /etc/etcd.env
    - /etc/cni
    - /etc/nginx
    - /opt/cni
    - /var/log/pods
    - /opt/etcd-*
    - /usr/bin/etcdctl
    - /usr/bin/etcd
    - /usr/bin/cfssl
    - /usr/bin/cfssljson
    - /run/xtables.lock
    - /run/flannel
    - /run/kubernetes

- name: reset | Restart network
  service:
    name: "{{item}}"
    state: restarted
  with_items:
    - network
    - networking
  args:
    warn: false
  ignore_errors: true

#- name: reset | remove host entries from /etc/hosts
#  blockinfile:
#    path: "/etc/hosts"
#    state: absent
#    follow: yes
#    marker: "# Ansible inventory hosts {mark}"
